#!/bin/bash

# WAF Rate Limiting Test Script
# This script continuously sends requests until AWS WAF blocks them
# Current WAF limit: 100 requests per 5-minute window per IP

URL="https://poc-app-platform-aws.digitalocean.solutions/healthz"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Usage function
usage() {
    echo "Usage: $0 [-h]"
    echo "  -h: Show this help message"
    echo ""
    echo "This script sends requests until WAF blocks them, then shows you the block page."
    exit 1
}

# Parse command line options
while getopts "h" opt; do
    case $opt in
        h)
            usage
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            usage
            ;;
    esac
done

echo -e "${YELLOW}WAF Rate Limiting Test${NC}"
echo "Testing URL: $URL"
echo "Expected rate limit: 100 requests per second over a 5-minute window"
echo ""
echo "Sending requests to trigger rate limit"

# Function to send a batch of parallel requests and check for blocks
send_batch() {
    local batch_size=100
    local blocked=0
    
    # Send batch in parallel
    for ((i=1; i<=batch_size; i++)); do
        {
            status_code=$(curl -s -o /dev/null -w "%{http_code}" "$URL" 2>/dev/null)
            if [ "$status_code" = "403" ]; then
                echo "BLOCKED" > /tmp/waf_blocked_$$
            fi
        } &
    done
    
    # Wait for all requests to complete
    wait
    
    # Check if any were blocked
    if [ -f /tmp/waf_blocked_$$ ]; then
        rm -f /tmp/waf_blocked_$$
        return 0  # Found blocks
    fi
    
    return 1  # No blocks found
}

# Keep sending batches until we get blocked
batch_count=0
while true; do
    ((batch_count++))
    echo -n "."
    
    if send_batch; then
        echo ""
        echo -e "${GREEN}✓ WAF Rate Limit ACTIVATED${NC} (403 responses detected)"
        echo ""
        echo -e "${YELLOW}Visit the URL below in your browser to see the CloudFront WAF block page:${NC}"
        echo -e "${RED}$URL${NC}"
        echo ""
        echo "The block page will show:"
        echo "- HTTP 403 ERROR"
        echo "- 'The request could not be satisfied'"
        echo "- 'Request blocked' message"
        echo "- Generated by CloudFront"
        echo ""
        echo -e "${YELLOW}Note: The rate limit will reset after 5 minutes from when it was first triggered.${NC}"
        break
    fi
    
    # Add a small delay between batches
    sleep 1
    
    # Safety check - don't run forever
    if [ $batch_count -gt 50 ]; then
        echo ""
        echo -e "${YELLOW}⚠ Sent $((batch_count * 100)) requests but WAF didn't block.${NC}"
        echo "This might indicate:"
        echo "1. Rate limit is higher than expected"
        echo "2. WAF rule is not active"
        echo "3. Different IP addressing is being used"
        echo ""
        echo "Try visiting $URL directly in your browser to check status."
        exit 1
    fi
done